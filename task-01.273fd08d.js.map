{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/01-api-service.js","<<jsx-config-pragma.js>>","src/js/get-refs.js","src/js/01-renderMarkup.js","src/js/task-01.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","export class FetchApiService {\n     constructor() {\n            this.searchQuer = '';\n        }\n\n    fetchPhotos() {        \n        console.log(this);\n        const BASE_URL = 'https://pixabay.com/api';\n\n        const params = new URLSearchParams({\n            key: '39342201-f813eddd1adb93dcbf05db88a',\n            q: this.searchQuer,\n            image_type: 'photo',\n            orientation: 'horizontal',\n            safesearch: true,\n            per_page: '40',\n            page: '1',\n            // per_page,\n            // page,\n        });\n        const url = `${BASE_URL}/?${params}`;\n        console.log(url);\n        return fetch(url).then(response => {             \n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n            return response.json();             \n        });         \n    }\n\n    get query1() {\n        console.log(this.searchQuer);\n        return this.searchQuer;\n        \n    }\n}",null,"export default function getRefs() {\n  return {\n    searchForm: document.querySelector('.search-form'),\n    photosContainer: document.querySelector('.gallery'),\n    loadMoreBtn: document.querySelector('.load-more'),\n  };\n}\n","import getRefs from \"./get-refs\";\nconst refs = getRefs();\n\nexport function renderHits(arr) {\n  const markup = arr\n    .map(item => {\n      return `<div class=\"photo-card\">\n        <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" loading=\"lazy\" />\n       <div class=\"info\">\n        <p class=\"info-item\">\n            <b>Likes: ${item.likes}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Views: ${item.views}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Comments: ${item.comments}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Downloads: ${item.downloads}</b>\n        </p>\n        </div>\n          </div>`;\n    })\n    .join('');\n\n  refs.photosContainer.insertAdjacentHTML('beforeend', markup);\n}\n\n","\nimport { FetchApiService }  from \"./01-api-service\";\nimport getRefs from \"./get-refs\";\nimport { renderHits } from \"./01-renderMarkup\"; \n\nconst refs = getRefs();\n\nconst fetchApiService = new FetchApiService();\nconsole.log(fetchApiService);\n// let page = 1;\n// let per_page = 40;\n// let query;\n// let params;\n// let q;\n\nrefs.loadMoreBtn.classList.add('is-hidden');\nrefs.searchForm.addEventListener('submit', onSearch);\nrefs.loadMoreBtn.addEventListener('click', onLoad);  \n\n\nfunction onSearch(e) {\n  e.preventDefault();\n\n  refs.loadMoreBtn.classList.add('is-hidden');\n  clearPhotosContainer();\n  console.log(e.currentTarget.elements.searchQuery.value);\n  fetchApiService.query1 = e.currentTarget.elements.searchQuery.value;\n  console.log(fetchApiService);\n \n  // if (!fetchApiService.query) {\n  //   alert(`Pole puste`);\n  //   return;\n  // }\n\n  // console.dir(FetchApiService);\n\n  fetchApiService.fetchPhotos()\n    .then(data => {\n      console.log(data);\n      if (data.hits.length == 0) {\n        alert(`Sorry, there are no images matching your \n              search query. Please try again`);\n        return;\n      }\n\n      renderHits(data.hits);\n      refs.loadMoreBtn.classList.remove('is-hidden');\n    })\n    .catch(error => console.log(error));\n}\n\nfunction onLoad() {\n  page += 1;\n\n  fetchApiService.fetchPhotos()\n    .then(data => {\n      console.log(data.totalHits);\n      if (page - 1 > data.totalHits / per_page) {\n        alert(`We're sorry, but you've reached the end of \n         search results.`);\n        return;\n      }\n\n      renderHits(data.hits);\n    })\n    .catch(error => console.log(error));\n}\n\n\n// function fetchPhotos() {\n//   const BASE_URL = 'https://pixabay.com/api';\n//   const params = new URLSearchParams({\n//     key: '39342201-f813eddd1adb93dcbf05db88a',\n//     q: query,\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: true,\n//     per_page,\n//     page,\n//   });\n//   const url = `${BASE_URL}/?${params}`;\n\n//   return fetch(url).then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     return response.json();\n//   });\n// }\n\nfunction clearPhotosContainer() {\n  refs.photosContainer.innerHTML = ' ';\n}\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$22532e427513a891$export$2058b053a8b70286","FetchApiService","this","searchQuer","console","log","params","URLSearchParams","q","image_type","orientation","safesearch","per_page","page","url","concat","fetch","then","response","ok","Error","status","json","$28e87b1ff6534a73$export$2e2bcd8739ae039","searchForm","document","querySelector","photosContainer","loadMoreBtn","$ca42bd01052e6c32$var$refs","$ca42bd01052e6c32$export$4de42e61a21600ec","arr","markup","map","item","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","$07f0dcc9b730cef4$var$refs","$07f0dcc9b730cef4$var$fetchApiService","classList","add","addEventListener","e","preventDefault","innerHTML","currentTarget","elements","searchQuery","query1","fetchPhotos","data","hits","remove","alert","catch","error","totalHits"],"version":3,"file":"task-01.273fd08d.js.map"}
{"mappings":"AAIA,MAAMA,ECHG,CACLC,WAAYC,SAASC,cAAc,gBACnCC,gBAAiBF,SAASC,cAAc,YACxCE,YAAaH,SAASC,cAAc,eDGxC,IAEIG,EAFAC,EAAO,EAqDX,SAASC,IACP,MACMC,EAAS,IAAIC,gBAAgB,CACjCC,IAAK,qCACLC,EAAGN,EACHO,WAAY,QACZC,YAAa,aACbC,YAAY,E,SA3DD,G,KA6DXR,IAIF,OAAOS,MAFK,4BAAgBP,KAEVQ,MAAKC,IACrB,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,G,CAI1B,SAASC,EAAWC,GAClB,MAAMC,EAASD,EACZE,KAAIC,GACI,+CACOA,EAAKC,sBAAsBD,EAAKE,4GAG5BF,EAAKG,iFAGLH,EAAKI,oFAGFJ,EAAKK,wFAGJL,EAAKM,kEAK5BC,KAAK,IAERlC,EAAKI,gBAAgB+B,mBAAmB,YAAaV,E,CA7FvDzB,EAAKK,YAAY+B,UAAUC,IAAI,aAC/BrC,EAAKC,WAAWqC,iBAAiB,UAGjC,SAAkBC,GAShB,GARAA,EAAEC,iBAEFxC,EAAKK,YAAY+B,UAAUC,IAAI,aAyFjC,WACErC,EAAKI,gBAAgBqC,UAAY,G,CAzFjCC,GAEAnC,EAAO,EACPD,EAAQiC,EAAEI,cAAcC,SAASC,YAAYC,OAExCxC,EAEH,YADAyC,MAAM,cAIRvC,IACGS,MAAK+B,IACoB,GAApBA,EAAKC,KAAKC,QAMd3B,EAAWyB,EAAKC,MAChBjD,EAAKK,YAAY+B,UAAUe,OAAO,cANhCJ,MAAM,0FAMsC,IAE/CK,OAAMC,GAASC,QAAQC,IAAIF,I,IA3BhCrD,EAAKK,YAAYiC,iBAAiB,SA8BlC,WACE/B,GAAQ,EAERC,IACGS,MAAK+B,IACJM,QAAQC,IAAIP,EAAKQ,WACbjD,EAAO,EAAIyC,EAAKQ,UAzCX,GA0CPT,MAAM,yEAKRxB,EAAWyB,EAAKC,KAAK,IAEtBG,OAAMC,GAASC,QAAQC,IAAIF,I","sources":["src/js/task-01.js","src/js/get-refs.js"],"sourcesContent":["\n// import { fetchPhotos } from \"./api-service\";\nimport getRefs from \"./get-refs\";\n\nconst refs = getRefs();\n\n\nlet page = 1;\nlet per_page = 40;\nlet query;\n\nrefs.loadMoreBtn.classList.add('is-hidden');\nrefs.searchForm.addEventListener('submit', onSearch);\nrefs.loadMoreBtn.addEventListener('click', onLoad);\n\nfunction onSearch(e) {\n  e.preventDefault();\n\n  refs.loadMoreBtn.classList.add('is-hidden');\n  clearPhotosContainer();\n\n  page = 1;\n  query = e.currentTarget.elements.searchQuery.value;\n\n  if (!query) {\n    alert(`Pole puste`);\n    return;\n  }\n\n  fetchPhotos()\n    .then(data => {\n      if (data.hits.length == 0) {\n        alert(`Sorry, there are no images matching your \n              search query. Please try again`);\n        return;\n      }\n\n      renderHits(data.hits);\n      refs.loadMoreBtn.classList.remove('is-hidden');\n    })\n    .catch(error => console.log(error));\n}\n\nfunction onLoad() {\n  page += 1;\n\n  fetchPhotos()\n    .then(data => {\n      console.log(data.totalHits);\n      if (page - 1 > data.totalHits / per_page) {\n        alert(`We're sorry, but you've reached the end of \n         search results.`);\n        return;\n      }\n\n      renderHits(data.hits);\n    })\n    .catch(error => console.log(error));\n}\n\nfunction fetchPhotos() {\n  const BASE_URL = 'https://pixabay.com/api';\n  const params = new URLSearchParams({\n    key: '39342201-f813eddd1adb93dcbf05db88a',\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page,\n    page,\n  });\n  const url = `${BASE_URL}/?${params}`;\n\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction renderHits(arr) {\n  const markup = arr\n    .map(item => {\n      return `<div class=\"photo-card\">\n        <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" loading=\"lazy\" />\n       <div class=\"info\">\n        <p class=\"info-item\">\n            <b>Likes: ${item.likes}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Views: ${item.views}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Comments: ${item.comments}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Downloads: ${item.downloads}</b>\n        </p>\n        </div>\n          </div>`;\n    })\n    .join('');\n\n  refs.photosContainer.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction clearPhotosContainer() {\n  refs.photosContainer.innerHTML = ' ';\n}\n","export default function getRefs() {\n  return {\n    searchForm: document.querySelector('.search-form'),\n    photosContainer: document.querySelector('.gallery'),\n    loadMoreBtn: document.querySelector('.load-more'),\n  };\n}\n"],"names":["$a3b8e1bc5eec2559$var$refs","searchForm","document","querySelector","photosContainer","loadMoreBtn","$a3b8e1bc5eec2559$var$query","$a3b8e1bc5eec2559$var$page","$a3b8e1bc5eec2559$var$fetchPhotos","params","URLSearchParams","key","q","image_type","orientation","safesearch","fetch","then","response","ok","Error","status","json","$a3b8e1bc5eec2559$var$renderHits","arr","markup","map","item","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","classList","add","addEventListener","e","preventDefault","innerHTML","$a3b8e1bc5eec2559$var$clearPhotosContainer","currentTarget","elements","searchQuery","value","alert","data","hits","length","remove","catch","error","console","log","totalHits"],"version":3,"file":"task-01.970ec054.js.map"}